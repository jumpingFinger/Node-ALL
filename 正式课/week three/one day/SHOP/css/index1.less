/*
  reset是清空默认样式的,不仅需要导入进来使用,最后需要和我们写的css一起编译,放到浏览器中渲染解析才可以

  common一般存放的是公用的变量或者方法 , 值需要调取使用即可 ,编译的时候不需要编译这些内容,所以用reference修饰一下

  @import导入的时候都是导入less文件 ,这样可以在编译这个less的时候,把所有的less编译到css中,来实现CSS的压缩合并
*/

@import "reset";
@import (reference)"common";

html,body{
  background: #F4F4F4;
  overflow-x:hidden;
}
.container{
  width: 1200px;
  margin: 20px auto;
}
.headerBox{
  @H:50px;
  @F:14px;
  height: @H;
  line-height: @H;
  background: @con-bg;
  font-size: 0;
  margin-bottom: 20px;
  span{
    display: inline-block;//使用inline-block会把标签之间的空格和换行当做元素站位,导致元素之间有间隙.解决方案 : 让父元素的的font-size=0;
    width: 90px;
    text-align: center;
    height: @H;
    line-height: @H;
    font-size:@F;
    color: @text-black;

}
  a{
    display: inline-block;
    padding: 0 15px;
    height: @H;
    line-height: @H;
    font-size: @F;
    color: @text-gray;

    &:hover{
      color: @text-active;
    }
  }
}
.productBox{
  margin:20px 0 0 0 ;
  overflow: hidden;

  li{
    float: left;/*子元素浮动,子元素的高度不能撑开父元素(脱离文档流),解决:清除子元素浮动对父元素的影响 =>clear:both*/

    margin-right:10px;
    margin-bottom: 10px;
    background: @con-bg;
    &:nth-child(5n){
      //=>5个为一组,一组中的第五个
      margin-right: 0;

    }
    a{
      display: block;
      box-sizing: border-box;/*C3新盒子模型 :我们设置的width是盒子最后的宽度,包括(边框.padding,内容宽度)*/
      padding: 0 16px;
      width: 232px;
      border:3px solid transparent;
      .transition(all 0.5s linear 0s);

      img{
        display: block;
        width: 100%;//=>这是父元素的高度
        height: 194px;
      }
      p{
        font-size: 12px;
        color: @text-gray;
        height: 50px;
        line-height: 25px;
        overflow: hidden;
      }
      span{
        display: block;
        line-height: 25px;
        font-size: 12px;
        color:@text-black;

        &:nth-of-type(1){/* span:nth-child(1),它不是所有span中第一个,它是A子元素中的第一个.*/
          /*nth-of-type :先按照SPan标签分组*/
          color:@text-active;
          font-weight: bold;
        }
      }
      &:hover{
        border-color:@text-active;
        border-radius: 5px;
      }
    }
  }
}