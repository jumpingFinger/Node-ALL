
@import 'reset';
//@import(reference) "common";  //=>只引用不编译/**/
html {
  /*640的设计稿尺寸中 , 让1rem=100px*/
  font-size: 100px;
}

html, body {
  position: relative;
  z-index: -4;
  height: 100%;
  overflow: hidden;

}

.mainBox {
  /*这个控制最大的宽度,不用rem来修改*/
  margin: 0 auto; /*当前页面的宽度超过了640px,让他在这个页面水平居中*/
  max-width: 640px;
  height: 100%;
  background: #000000;
  position: relative;
  z-index: -3;
}

.cubeBox{
  background:url("../img/zf_cubeBg.jpg") no-repeat;
  background-size: cover;
  .cube{
    position: absolute;
    left: 50%;
    top: 50%;
    margin:-2.55rem 0 0 -2.55rem;
    width: 5.1rem;
    height: 5.1rem;

    li{
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;


      img{
        display: block;
        width: 100%;
        height: 100%;
      }
    }
  }

  .tip{
    position: absolute;
    //bottom:
  }
}
/*在二维平面中实现3D效果*/
.cubeBox{
  //=>1.给需要实现3D变形元素所在的舞台设置'视距' (1000~2000)
  perspective:2000px;

  .cube{
    //=>2.给需要操作的元素设置3D变形效果
    transform-style:preserve-3d;
    //  transform-origin: center center 0; //=>设置中心点
    //=>3.基于transform实现3D变形

    li{
      &:nth-child(1){
        transform: translateZ(2.55rem);
      }
      &:nth-child(2){
        transform: translateZ(-2.55rem) rotateY(180deg);//=>多个变形效果用空格隔开
      }
      &:nth-child(3){
        transform: translateX(2.55rem) rotateY(90deg);
      }
      &:nth-child(4){
        transform: translateX(-2.55rem) rotateY(-90deg);
      }
      &:nth-child(5){
        transform: translateY(-2.55rem) rotateX(90deg);
      }
      &:nth-child(5){
        transform: translateY(2.55rem) rotateX(-90deg);
      }
    }

    //=>给魔方一个初始的旋转角度 ,让其可以看到3D的效果 (最后魔方太大了,给魔方缩小一点)
    transform: scale(0.6) translateX(40deg) translateY(-30deg);
    transition:.3s;//=>后期让魔方旋转的时候有一个平稳的过渡动画效果
  }
}
