
/*
 var ary  = [1,2,3, 1(索引3),2(索引4),3,4,1];
            [1,2,3, 2(索引3),3,4,1];
1    2,3, x,2,3,4,x
1    2
1    3
1    1
1    2

1     3
1     4
1

* 方法一:利用双层for循环
* 先确定当出项   依次跟后面的每一项进行比较 如果后面的项中有跟我当前项重复的  就去数组中把重复的哪项給删除掉
* 1     2,3,1,2,3,4,1
*       [1,2,3,2,3,4]
* 2     1 2 3 2 3 4
*       [1 3 3 4]
* 3     [1 4]
* ....
* 轮数: ary.length-1
* 数组的塌陷问题:
* 删除数组中的某一项  后面对应的每一项的索引都会-1;
*
* */
var ary  = [1,2,3,1,2,1,4,1,1,2,4,1];
//轮数: ary.lenght-1 最后一个数不需要拿出来比较
for (var i = 0; i < ary.length-1; i++) {
    var cur = ary[i]; //拿出当前项 i  后一项的索引 i+1
    // 每一轮: 当前 跟当前项的后面项一一进行比较
    for (var j = i+1; j < ary.length; j++) {
        /* 判断拿出来比较的那一项跟我当前项有没有重复 重复 删除掉*/
        if(cur == ary[j]){
             /*删除重复项*/
             ary.splice(j,1); //数组的塌陷问题: 删除数组的一项 后面的索引都会往前提1
            j--; /*先-- 再++ 就相当于没加没减*/
        }
    }
}
console.log(ary);
